gp = gpar(fontsize = 18, font = 2)))
r0A
head(r0Est)
?getR0
# get true R0
tstar <- 120
X <- getX(250, tstar)
source('../helper_functions.R')
X <- getX(250, tstar)
trueR0IDDPeak <- getR0(infPeriodSpec = 'IDD',
beta = c(0.25, -7),
X = X,
N = N,
infIDDParams =  list(shape = 4,
rate = 1,
maxInf = 15))
# get true R0
fullX <- getX(250, 120)
# get true R0's
iddPeakR0 <- getR0(infPeriodSpec = 'IDD',
beta = c(0.25, -7), X = fullX, N = N,
infIDDParams = list(iddFun = dgammaIDD,
iddParams = list(shape = 4, rate = 1),
maxInf = 15))
iddExpR0 <- getR0(infPeriodSpec = 'IDD',
beta = c(0.4, -7), X = fullX, N = N,
infIDDParams = list(iddFun = dgammaIDD,
iddParams = list(shape = 0.9, rate = 0.3),
maxInf = 15))
iddLogitR0 <- getR0(infPeriodSpec = 'IDD',
beta = c(-1.77, -7), X = fullX, N = N,
infIDDParams = list(iddFun = logitIDD,
iddParams = list(mid = 8, rate = 1.5),
maxInf = 15))
iddPSR0 <- getR0(infPeriodSpec = 'PS',
beta = c(-1.77, -7), X = fullX, N = N,
infPSParams = list(dist = 'gamma',
psParams = list(shape = 56, rate = 7),
maxInf = 15))
trueR0 <- data.frame(datGen = rep(c('IDD_peak', 'IDD_exp', 'IDD_logit', 'PS'),
each = 15),
infDay = 1:15,
truth = c(iddPeakR0, iddExpR0, iddLogitR0, iddPSR0))
iddPeakR0
head(r0Est)
trueR0 <- data.frame(datGen = rep(c('IDD_peak', 'IDD_exp', 'IDD_logit', 'PS'),
each = 15),
time = 1:250,
truth = c(iddPeakR0, iddExpR0, iddLogitR0, iddPSR0))
iddExpR0
trueR0 <- data.frame(datGen = rep(c('IDD_peak', 'IDD_exp', 'IDD_logit', 'PS'),
each = 250),
time = 1:250,
truth = c(iddPeakR0, iddExpR0, iddLogitR0, iddPSR0))
head(r0Est)
head(trueR0)
r0Est <- merge(r0Est, trueR0, by = c('datGen', 'time'), all.x = T)
head(r0Est)
library(plyr)
r0MSE <- ddply(r0Est, .(datGen, time, infPeriodSpec, iddFun, maxInf),
summarize,
mse = mean(mean-truth^2))
head(r0MSE)
r0MSE <- ddply(r0Est, .(datGen, time, infPeriodSpec, iddFun, maxInf),
summarize,
mse = mean((mean-truth)^2))
head(r0MSE)
head(r0MSE, 200)
r0MSETime <- ddply(subset(r0Est, time == 1), .(datGen, infPeriodSpec, iddFun, maxInf),
summarize,
mse = mean((mean-truth)^2))
head(r0MSETime)
r0MSE <- ddply(subset(r0Est, time == 1), .(datGen, infPeriodSpec, iddFun, maxInf),
summarize,
mse = mean((mean-truth)^2))
# barplot
r0MSE$fitType <- r0MSE$iddFun
r0MSE$fitType[r0MSE$infPeriodSpec == 'exp'] <- 'exp'
r0MSE$fitType[r0MSE$infPeriodSpec == 'PS'] <- 'PS'
r0MSE$fitType <- factor(r0MSE$fitType,
levels = c('dlnormIDD', 'dgammaIDD',
'logitIDD', 'exp',
'PS', 'splineIDD'),
labels = c(expression(`Log-normal`~Pdf^"\206"),
expression("Gamma"~Pdf^"\206"),
expression(Logistic~Decay^"\206"),
expression(Exponential),
expression(`Path-specific`),
expression(Basis~Spline^"\206")))
pal <- brewer.pal(6, 'Dark2')
pal <- pal[c(1:3, 6, 4:5)]
makeFootnote <- function(footnoteText,
size = .7, color = grey(.5),
xunit=0.85, yunit = 35) {
require(grid)
pushViewport(viewport())
grid.text(label = footnoteText ,
x = unit(xunit,"npc"),
y = unit(yunit, "mm"),
just = c("left", "bottom"),
gp = gpar(cex = size, col = color))
popViewport()
}
library(RColorBrewer)
pal <- brewer.pal(6, 'Dark2')
pal <- pal[c(1:3, 6, 4:5)]
head(r0MSE)
ggplot(data = subset(r0MSE, maxInf ==20),
aes(x = datGen, y = mse, fill = fitType, group = fitType)) +
geom_bar(position="dodge", stat="identity", col = 'black', size = 0.2) +
scale_fill_manual(values=pal, labels = parse_format()) +
myTheme +
labs(title = expression('MSE of'~ R[0]),
fill = 'Modeling Approach', y = 'MSE', x = 'Data Type') +
theme(legend.text.align = 0)
ggplot(data = subset(r0MSE, maxInf ==20),
aes(x = datGen, y = mse, fill = fitType, group = fitType)) +
geom_bar(position="dodge", stat="identity", col = 'black', size = 0.2) +
scale_fill_manual(values=pal, labels = label_parsed()) +
myTheme +
labs(title = expression('MSE of'~ R[0]),
fill = 'Modeling Approach', y = 'MSE', x = 'Data Type') +
theme(legend.text.align = 0)
scale_fill_manual(values=pal, labels = label_parsed +
ggplot(data = subset(r0MSE, maxInf ==20),
aes(x = datGen, y = mse, fill = fitType, group = fitType)) +
geom_bar(position="dodge", stat="identity", col = 'black', size = 0.2) +
scale_fill_manual(values=pal, labels = label_parsed) +
myTheme +
labs(title = expression('MSE of'~ R[0]),
fill = 'Modeling Approach', y = 'MSE', x = 'Data Type') +
theme(legend.text.align = 0)
ggplot(data = subset(r0MSE, maxInf ==20),
aes(x = datGen, y = mse, fill = fitType, group = fitType)) +
geom_bar(position="dodge", stat="identity", col = 'black', size = 0.2) +
scale_fill_manual(values=pal, labels = parse_format()) +
myTheme +
labs(title = expression('MSE of'~ R[0]),
fill = 'Modeling Approach', y = 'MSE', x = 'Data Type') +
theme(legend.text.align = 0)
library(ggforce)
ggplot(data = subset(r0MSE, maxInf ==20),
aes(x = datGen, y = mse, fill = fitType, group = fitType)) +
geom_bar(position="dodge", stat="identity", col = 'black', size = 0.2) +
scale_fill_manual(values=pal, labels = parse_format()) +
myTheme +
labs(title = expression('MSE of'~ R[0]),
fill = 'Modeling Approach', y = 'MSE', x = 'Data Type') +
theme(legend.text.align = 0)
library(scales)
ggplot(data = subset(r0MSE, maxInf ==20),
aes(x = datGen, y = mse, fill = fitType, group = fitType)) +
geom_bar(position="dodge", stat="identity", col = 'black', size = 0.2) +
scale_fill_manual(values=pal, labels = parse_format()) +
myTheme +
labs(title = expression('MSE of'~ R[0]),
fill = 'Modeling Approach', y = 'MSE', x = 'Data Type') +
theme(legend.text.align = 0)
makeFootnote(expression("\206"),
color = "black", size=1, xunit = 0.777, yunit = 35)
makeFootnote("models fit using the proposed\nIDD transmissibility approach",
color = "black", size=1.2, xunit = 0.787, yunit = 27)
head(mcmcEffEst)
ddply(mcmcEffEst, .(datGen, param), summarize,
meanEff = mean(eff),
sdEff = sd(eff))
mcmcEffEst$fitType <- mcmcEffEst$iddFun
mcmcEffEst$fitType[mcmcEffEst$infPeriodSpec == 'exp'] <- 'exp'
mcmcEffEst$fitType[mcmcEffEst$infPeriodSpec == 'PS'] <- 'PS'
ddply(mcmcEffEst, .(fitType, param), summarize,
meanEff = mean(eff),
sdEff = sd(eff))
head(mcmcEffEst)
head(mcmcEffEst. 10)
head(mcmcEffEst, 10)
ddply(mcmcEffEst, .(fitType, param), summarize,
meanEff = mean(eff),
sdEff = sd(eff))
head(r0Est)
ddply(mcmcEffEst, .(fitType, param, maxInf), summarize,
meanEff = mean(eff),
sdEff = sd(eff))
ddply(mcmcEffEst, .(maxInf, fitType, param), summarize,
meanEff = mean(eff),
sdEff = sd(eff))
head(r0Est)
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean)) +
geom_line(aes(y = truth, col = datGen))
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen, fitType)
r0Est$fitType <- r0Est$iddFun
r0Est$fitType[r0Est$infPeriodSpec == 'exp'] <- 'exp'
r0Est$fitType[r0Est$infPeriodSpec == 'PS'] <- 'PS'
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen, fitType)
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen + fitType)
datGens <- c('PS', 'IDD_peak', 'IDD_exp', 'IDD_logit')
maxInfs <- c(15, 20)
nSim <- 100
modelsIDD <- expand.grid(datGen = datGens,
infPeriodSpec = 'IDD',
iddFun = c('dgammaIDD', 'dlnormIDD', 'logitIDD', 'splineIDD'),
maxInf = maxInfs,
simNumber = 1:nSim,
stringsAsFactors = FALSE)
modelsIDD <- modelsIDD[order(modelsIDD$datGen, modelsIDD$infPeriodSpec,
modelsIDD$iddFun, modelsIDD$maxInf, modelsIDD$simNumber),]
modelsExp <- expand.grid(datGen = datGens,
infPeriodSpec = 'exp',
iddFun = NA,
maxInf = maxInfs,
simNumber = 1:nSim,
stringsAsFactors = FALSE)
modelsExp <- modelsExp[order(modelsExp$datGen, modelsExp$infPeriodSpec,
modelsExp$iddFun, modelsExp$maxInf, modelsExp$simNumber),]
modelsPS <- expand.grid(datGen = datGens,
infPeriodSpec = 'PS',
iddFun = NA,
maxInf = maxInfs,
simNumber = 1:nSim,
stringsAsFactors = FALSE)
modelsPS <- modelsPS[order(modelsPS$datGen, modelsPS$infPeriodSpec,
modelsPS$iddFun, modelsPS$maxInf, modelsPS$simNumber),]
# 4800 models to run (6 models * 4 data generation * 2 maxInfs * 100 sims)
# IDD 1 - 3200
# Exp 3201 - 4000
# PS 4001 - 4800
allModels <- rbind.data.frame(modelsIDD, modelsExp, modelsPS)
head(allModels)
datGens
tail(allModels)
tail(modelsIDD)
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen + fitType)
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Days Infectious', y = expression(pi[0]^"(SE)"),
title = 'Known Exposure Times')  +
scale_color_manual(values =pal)
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Epidemic Time', y = expression(R[0](t)),
title = 'Known Exposure Times')  +
scale_color_manual(values =pal)
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Epidemic Time', y = expression(R[0](t)))  +
scale_color_manual(values =pal) +
ggtitle(expression('Posterior mean estimates of '~R[0](t)))
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Epidemic Time', y = expression(R[0](t)),
col = 'Data Generation\nScenario')  +
scale_color_manual(values =pal) +
ggtitle(expression('Posterior mean estimates of '~R[0](t)))
table(r0Est$datGen)
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Epidemic Time', y = expression(R[0](t)),
col = 'Data Generation\nScenario')  +
scale_color_manual(values =pal) +
ggtitle(expression('Posterior mean estimates of '~R[0](t))) +
theme(legend.position = "none")
r0Est$datType <- factor(r0Est$datGen,
levels = c('IDD_peak', 'IDD_exp', 'IDD_logit', 'PS'),
labels = c('IDD Peak', 'IDD Exp', 'IDD Logit', 'PS'))
r0Est$fitType <- factor(r0Est$fitType,
levels = c('exp', 'PS', 'gamma', 'logNormal', 'logit', 'spline'),
labels = c('Exponential','Path-specific',
'Gamma Pdf', 'Log-normal Pdf', 'Logistic Decay', 'Basis Spline'))
r0Est$datGen <- factor(r0Est$datGen,
levels = c('IDD_peak', 'IDD_exp', 'IDD_logit', 'PS'),
labels = c('IDD Peak', 'IDD Exp', 'IDD Logit', 'PS'))
r0Est$fitType <- factor(r0Est$fitType,
levels = c('exp', 'PS', 'gamma', 'logNormal', 'logit', 'spline'),
labels = c('Exponential','Path-specific',
'Gamma Pdf', 'Log-normal Pdf', 'Logistic Decay', 'Basis Spline'))
pal <- c('magenta3', 'darkorange', 'green3', 'royalblue2')
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen))+
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Epidemic Time', y = expression(R[0](t)),
col = 'Data Generation\nScenario')  +
scale_color_manual(values =pal) +
ggtitle(expression('Posterior mean estimates of '~R[0](t))) +
theme(legend.position = "none")
head(r0Est)
r0Est$fitType <- r0Est$iddFun
r0Est$fitType[r0Est$infPeriodSpec == 'exp'] <- 'exp'
r0Est$fitType[r0Est$infPeriodSpec == 'PS'] <- 'PS'
r0Est$fitType <- factor(r0Est$fitType,
levels = c('exp', 'PS', 'dgammaIDD', 'dlnormIDD', 'logitIDD', 'splineIDD'),
labels = c('Exponential','Path-specific',
'Gamma Pdf', 'Log-normal Pdf', 'Logistic Decay', 'Basis Spline'))
ggplot(r0Est, aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen), size = 1) +
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Epidemic Time', y = expression(R[0](t)),
col = 'Data Generation\nScenario')  +
scale_color_manual(values =pal) +
ggtitle(expression('Posterior mean estimates of '~R[0](t))) +
theme(legend.position = "none")
ggplot(subset(r0Est, maxInf == 15), aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen), size = 1) +
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Epidemic Time', y = expression(R[0](t)),
col = 'Data Generation\nScenario')  +
scale_color_manual(values =pal) +
ggtitle(expression('Posterior mean estimates of '~R[0](t))) +
theme(legend.position = "none")
ggplot(subset(r0Est, maxInf == 20), aes(x = time)) +
geom_line(aes(y = mean), color =  adjustcolor('grey', alpha = 0.5)) +
geom_line(aes(y = truth, col = datGen), size = 1) +
facet_wrap(~datGen + fitType, nrow = 4) +
myTheme +
labs(x = 'Epidemic Time', y = expression(R[0](t)),
col = 'Data Generation\nScenario')  +
scale_color_manual(values =pal) +
ggtitle(expression('Posterior mean estimates of '~R[0](t))) +
theme(legend.position = "none")
head(postParamsEst)
ggplot(postParamsEst, aes(x = simNumber, y = mean,
ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~datGen + iddFun + param)
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~datGen + param)
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~datGen + param, ncol = 5)
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~datGen + param, ncol = 5)+
myTheme
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~datGen + param, ncol = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ param + datGen, nrow = 5) +
myTheme
, scales = 'free'
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ param + datGen, nrow = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD' & maxInf == 15),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'& maxInf == 20),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
# IDD logit
ggplot(subset(postParamsEst, iddFun == 'logitIDD' & maxInf == 15),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
head(subset(postParamsEst, iddFun == 'logitIDD' & maxInf == 15))
dim(subset(postParamsEst, iddFun == 'logitIDD' & maxInf == 15))
dim(subset(postParamsEst, iddFun == 'logitIDD' & maxInf == 15 * simNumber == 96))
dim(subset(postParamsEst, iddFun == 'logitIDD' & maxInf == 15 & simNumber == 96))
subset(postParamsEst, iddFun == 'logitIDD' & maxInf == 15 & simNumber == 96)
# IDD Gamma
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD' & maxInf == 15),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
iddPeakParam <- data.frame(datGen = 'IDD_peak',
param = c('beta1', 'beta2', 'rateE', 'shape', 'rate'),
truth = c(0.25, -7, 0.2, 4, 1))
iddExpParam <- data.frame(datGen = 'IDD_exp',
param = c('beta1', 'beta2', 'rateE', 'shape', 'rate'),
truth = c(0.4, -7, 0.2, 0.9, 0.3))
iddLogitParam <- data.frame(datGen = 'IDD_logit',
param = c('beta1', 'beta2', 'rateE', 'mid', 'rate'),
truth = c(-1.77, -7, 0.2, 8, 1.5))
psParam <- data.frame(datGen = 'PS',
param = c('beta1', 'beta2', 'rateE', 'shape', 'rate'),
truth = c(-1.77, -7, 0.2, 56, 7))
trueParams <- rbind.data.frame(iddPeakParam,
iddExpParam,
iddLogitParam,
psParam)
head(trueParams)
head(postParamsEst)
postParamsEst <- merge(postParamsEst, trueParams,
by = c('datGen', 'param'),
all.x = T)
head(postParamsEst)
# IDD Gamma
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD' & maxInf == 15),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
geom_hline(aes(yintercept = truth), col = 'red', linetype = 2) +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'& maxInf == 20),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'dgammaIDD'& maxInf == 20),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
geom_hline(aes(yintercept = truth), col = 'red', linetype = 2) +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
# IDD log-normal
ggplot(subset(postParamsEst, iddFun == 'dlnormIDD' & maxInf == 15),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
geom_hline(aes(yintercept = truth), col = 'red', linetype = 2) +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'dlnormIDD'& maxInf == 20),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
geom_hline(aes(yintercept = truth), col = 'red', linetype = 2) +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
# IDD logit
ggplot(subset(postParamsEst, iddFun == 'logitIDD' & maxInf == 15),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
geom_hline(aes(yintercept = truth), col = 'red', linetype = 2) +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'logitIDD'& maxInf == 20),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
ggplot(subset(postParamsEst, iddFun == 'logitIDD'& maxInf == 20),
aes(x = simNumber, y = mean, ymin = lower, ymax = upper)) +
geom_point() +
geom_errorbar() +
geom_hline(aes(yintercept = truth), col = 'red', linetype = 2) +
facet_wrap(~ datGen + param, ncol = 5, scales = 'free') +
myTheme
subset(postParamsEst, iddFun == 'logitIDD'& maxInf == 20)
subset(postParamsEst, iddFun == 'logitIDD'& maxInf == 20 & param == 'rate')
subset(postParamsEst, iddFun == 'logitIDD'& maxInf == 20 & param == 'rate' & datGen == 'IDD_logit')
subset(postParamsEst, iddFun == 'logitIDD'& maxInf == 20 & param == 'rate' & datGen == 'IDD_logit')
